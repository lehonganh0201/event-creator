package gui;
/*
 * @author HongAnh
 * @created 14 / 02 / 2024 - 7:58 PM
 * @project IntelliJ IDEA
 * @social Github: https://github.com/lehonganh0201
 */

import domain.User;
import service.UserService;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;

public class ManagerUserFrame extends javax.swing.JFrame {

    /**
     * Creates new form ManagerUserFrame
     */
    public ManagerUserFrame() {
        userService = new UserService();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtNameInput = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        preBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "ID", "FullName", "Email", ""
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        preBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        preBtn.setText("<");
        preBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preBtnActionPerformed(evt);
            }
        });

        nextBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nextBtn.setText(">");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Page" + currentPage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn)
                                .addGap(0, 103, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(preBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nextBtn)
                                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(backBtn)
                                        .addComponent(preBtn)
                                        .addComponent(nextBtn)
                                        .addComponent(jLabel1))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();

        jTable1.setRowHeight(50);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new ButtonRenderer());
        jTable1.getColumnModel().getColumn(3).setCellEditor(new AdminEditor(new JCheckBox()));

        tableModel = (DefaultTableModel) jTable1.getModel();

        updateUserData(userService.getUserList());
    }// </editor-fold>

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        AdminHome adminHome = new AdminHome(LoginFrame.user);
        adminHome.setVisible(true);
        dispose();
    }

    private void preBtnActionPerformed(java.awt.event.ActionEvent evt) {
        if(currentPage > 1){
            currentPage--;
            updateUserData(userService.getUserList());
            jLabel1.setText("Page: " + currentPage);
        }
    }

    private void updateUserData(List<User> userList) {
        tableModel.setRowCount(0);

        int startIndex = (currentPage - 1) * eventsPerPage;
        int endIndex = Math.min(startIndex + eventsPerPage, userList.size());

        for (int i = startIndex; i < endIndex; i++) {
            User user = userList.get(i);

            Object[] objects = {
                    user.getUserId(),
                    user.getFullName(),
                    user.getEmail(),
                    "Remove"
            };
            tableModel.addRow(objects);
        }
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new ButtonRenderer());
        jTable1.getColumnModel().getColumn(3).setCellEditor(new AdminEditor(new JCheckBox()));
    }

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {
        int maxPage = (int) Math.ceil((double) userService.getUserList().size() / eventsPerPage);
        if (currentPage < maxPage) {
            currentPage++;
            updateUserData(userService.getUserList());
            jLabel1.setText("Page: " + currentPage);
        }
    }

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        List<User> list = userService.getListByEmail(txtNameInput.getText());
        updateUserData(list);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton preBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField txtNameInput;
    private DefaultTableModel tableModel;
    private int currentPage = 1;
    private int eventsPerPage = 5;
    private final UserService userService;
    // End of variables declaration
}
